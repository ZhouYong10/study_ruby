常量以大写字母开头。定义在类或模块内的常量可以从类或模块的内部访问，也可以通过‘类名::常量名’的方式在类或模块的外部访问。
ruby1.8特性:可以使用"::"对常数进行赋值。
定义在类或模块外的常量可以被全局访问。
常量不能定义在方法内。
引用一个未初始化的常量会产生错误。
对已经初始化的常量赋值会产生警告。

    class Example
       VAR1 = 100
       VAR2 = 200
       def show
           puts "Value of first Constant is #{VAR1}"
           puts "Value of second Constant is #{VAR2}"
       end
    end

    # 创建对象
    object=Example.new()
    object.show
    在这里，VAR1 和 VAR2 是常量。这将产生以下结果：

    Value of first Constant is 100
    Value of second Constant is 200

当引用模块和类中同名的常量时，优先引用嵌套树外侧的常量， Object 的优先度最低，不过建议大家尽量不使用同名常量。