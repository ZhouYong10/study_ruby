1：整型（Integer)
    整型分两种，如果在31位以内（四字节），那为Fixnum实例。如果超过，即为Bignum实例。
    整数范围从 -230 到 230-1 或 -262 到 262-1。在这个范围内的整数是类 Fixnum 的对象，在这个范围外的整数存储在类 Bignum 的对象中。
    可以在整数前使用一个可选的前导符号，一个可选的基础指标（0 对应 octal，0x 对应 hex，0b 对应 binary），后跟一串数字。
    逗号或下划线字符在数字中被忽略。

    示例：
    123                  # Fixnum 十进制
    1_234                # Fixnum 带有下划线的十进制
    -500                 # 负的 Fixnum
    0377                 # 八进制
    0xff                 # 十六进制
    0b1011               # 二进制
    ?a                   # 'a' 的字符编码
    ?\n                  # 换行符（0x0a）的编码
    12345678901234567890 # Bignum

2:浮点型
    Ruby 支持浮点数。它们是带有小数的数字。浮点数是类 Float 的对象，可以通过下列的形式描述：

    123.4                # 浮点值
    1.0e6                # 科学记数法
    4E20                 # 不是必需的
    4e+20                # 指数前的符号